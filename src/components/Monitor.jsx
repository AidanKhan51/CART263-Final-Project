/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/monitor.glb 
*/

import React from 'react'
import { useGLTF, Float, Html } from '@react-three/drei'

const Monitor = (props) => {
  const { nodes, materials } = useGLTF('./models/monitor.glb')
  const [monitorOn, setMonitorOn] = React.useState(false);
  const [monitorTitle, setMonitorTitle] = React.useState(false);

  return <>
    <Float floatIntensity={3} rotationIntensity={0} speed={3}>
      {monitorTitle && <Html className="drawer_title" position={[2, 19, 0.5]} rotation={[-3.1415927, 1.4835301, -3.1415927]} transform>
        Add Artifact
      </Html>}
    </Float>
    <group
      {...props}
      dispose={null}
      so onClick={(e) => {
        switch (monitorOn) {
          case false:
            e.stopPropagation()
            props.onCameraPositionChange([5, 10, 0])
            props.onCameraAngleChange([0, 10, 0])
            props.setEnabled(false)
            setMonitorTitle(false)
            props.onToggleForm(!props.formOn)
            setMonitorOn(true)
            break;
          case true:
            e.stopPropagation()
            props.setEnabled(true)
            setMonitorTitle(false)
            props.onToggleForm(!props.formOn)
            setMonitorOn(false)
            break;
        }
      }}
      onPointerEnter={() => {
        if (monitorOn === false) {
          setMonitorTitle(true);
        }
      }}
      onPointerLeave={() => {
        if (monitorOn === false) {
          setMonitorTitle(false);
        }
      }}
    >
      <group {...props} dispose={null}>
        <group position={[-0.07, 4.092, 0]} rotation={[-Math.PI, 1.484, -Math.PI]} scale={2.308}>
          <mesh geometry={nodes.tv.geometry} material={materials.tv_screen} />
          <mesh geometry={nodes.tv_1.geometry} material={materials.tv_out} />
        </group>
      </group>
    </group>
  </>
}
export default Monitor
useGLTF.preload('./models/monitor.glb')
