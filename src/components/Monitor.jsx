/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/monitor.glb 
*/

{/*Imports*/ }
import React from 'react'
import { useGLTF, Float, Html } from '@react-three/drei'

{/*IMPORTANT: most of the code is a duplicate from drawer-one.jsx. 
  The repeated code in this file will be less detailed unless it is unique to this file*/ }

{/*Model stored for export*/ }
const Monitor = (props) => {
  const { nodes, materials } = useGLTF('./models/monitor.glb')
  const [monitorTitle, setMonitorTitle] = React.useState(false);

  return <>
    {/*Floating title displayed on monitor*/}
    <Float floatIntensity={3} rotationIntensity={0} speed={3}>
      {monitorTitle && <Html className="drawer_title" position={[8, 76, 2]} rotation={[-3.1415927, 1.4835301, -3.1415927]} transform>
        Add Artifact?
      </Html>}
    </Float>
    <group
      {...props}
      dispose={null}
      so onClick={(e) => {
        {/*When Monitor is clicked, move camera and render form*/ }
        switch (props.monitorOn) {
          case false:
            e.stopPropagation()
            props.onCameraPositionChange([20, 40, 0])
            props.onCameraAngleChange([0, 40, 0])
            props.setEnabled(false)
            setMonitorTitle(false)
            {/*Render form*/ }
            props.onToggleForm(!props.formOn)
            props.setMonitorOn(true)
            break;
          case true:
            e.stopPropagation()
            props.setEnabled(true)
            setMonitorTitle(false)
            {/*Hide form*/ }
            props.onToggleForm(!props.formOn)
            props.setMonitorOn(false)
            break;
        }
      }}
      onPointerEnter={() => {
        if (props.monitorOn === false) {
          {/*Turn on title*/ }
          setMonitorTitle(true);
        }
      }}
      onPointerLeave={() => {
        if (props.monitorOn === false) {
          {/*Turn off title*/ }
          setMonitorTitle(false);
        }
      }}
    >
      {/*3D data*/}
      <group {...props} dispose={null}>
        <group position={[-0.07, 4.092, 0]} rotation={[-Math.PI, 1.484, -Math.PI]} scale={2.308}>
          <mesh geometry={nodes.tv.geometry} material={materials.tv_screen} />
          <mesh geometry={nodes.tv_1.geometry} material={materials.tv_out} />
        </group>
      </group>
    </group>
  </>
}
{/*export to experience*/ }
export default Monitor

useGLTF.preload('./models/monitor.glb')
