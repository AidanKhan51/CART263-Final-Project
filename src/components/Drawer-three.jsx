/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/drawer-three.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, Html } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

const DrawerThree = (props) => {
  const { scene } = useGLTF('./models/drawer-three.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const [showText, setShowText] = React.useState(false);

  return <>
    {showText && <Html>
      <div>I am Drawer Three!</div>
    </Html>}
    <group
      {...props}
      dispose={null}
      onClick={() => setShowText(!showText)}
      onPointerEnter={() => console.log('enter')}
      onPointerLeave={() => console.log('leave')}
    >
      <group position={[0.298, 1.074, 1.225]} rotation={[0, 0, -Math.PI / 2]} scale={0.733}>
        <group position={[0, 1.098, 0]} scale={0.679}>
          <primitive object={nodes.Bone_1} />
          <mesh geometry={nodes.Cube007.geometry} material={nodes.Cube007.material} position={[-0.087, 0.828, -2.461]} rotation={[0, 0, Math.PI / 2]} scale={[1.986, 0.35, 1.986]}>
            <mesh geometry={nodes.Plane002.geometry} material={nodes.Plane002.material} position={[-0.175, -0.343, 0]} rotation={[0, 0, -Math.PI / 2]} scale={[0.42, 1.012, 0.606]} />
          </mesh>
          <mesh geometry={nodes.Cube008.geometry} material={nodes.Cube008.material} position={[-0.03, -0.115, -0.9]} rotation={[0, 0, Math.PI / 2]} scale={[0.842, 0.109, 0.064]} />
        </group>
        <primitive object={nodes.Bone} />
        <mesh geometry={nodes.Cube009.geometry} material={nodes.Cube009.material} position={[-0.02, 1.017, -0.549]} rotation={[0, 0, Math.PI / 2]} scale={[0.572, 0.074, 0.043]} />
      </group>
    </group>
  </>;
}
export default DrawerThree

useGLTF.preload('./models/drawer-one.glb')
