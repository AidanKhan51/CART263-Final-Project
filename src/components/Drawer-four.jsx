/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/drawer-four.glb 
*/

import React, { useEffect } from "react";
import { useGraph } from '@react-three/fiber'
import { useGLTF, Html, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

const DrawerFour = (props) => {
  const group = React.useRef()
  const { scene, animations } = useGLTF('./models/drawer-four.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions, names } = useAnimations(animations, group)
  console.log(names)
  const [showText, setShowText] = React.useState(false);

  useEffect(() => {
    actions[names[2]].reset().play()
  }, []);

  return <>
    {showText && <Html>
      <div>I am Drawer Four!</div>
    </Html>}
    <group
      {...props}
      dispose={null}
      onClick={() => setShowText(!showText)}
      onPointerEnter={() => console.log('enter')}
      onPointerLeave={() => console.log('leave')}
    >
      <group ref={group} {...props} dispose={null}>
        <group name="Scene">
          <group name="SliderFour" rotation={[0, 0, -Math.PI / 2]} scale={0.571}>
            <primitive object={nodes.BoneBig} />
          </group>
          <mesh name="Cube016" geometry={nodes.Cube016.geometry} material={materials['Slider 1']} position={[0.497, -0.021, 0.828]} scale={[0.861, 0.054, 0.032]} />
        </group>
      </group>
    </group>
  </>;
}

export default DrawerFour

useGLTF.preload('./models/drawer-four.glb')
